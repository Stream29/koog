# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Heavy Tests

on:
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main, develop ]

env:
  AWS_REGION: us-west-2
  KOOG_HEAVY_TESTS: true

jobs:
  integration-tests:

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write  # Required for OIDC authentication
    timeout-minutes: 90  # Prevent hanging builds

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
      - name: Configure Git
        run: |
          git config --global core.autocrlf input

      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: corretto

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_KOOG }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHub-Actions-Koog-Integration-Tests
          role-duration-seconds: 10800  # 3 hours (3 * 60 * 60)

      - name: Verify AWS Identity and Bedrock access
        run: |
          echo "Verifying AWS identity..."
          aws sts get-caller-identity
          echo "AWS region: $AWS_REGION"
          
          echo "Testing Bedrock access..."
          aws bedrock list-foundation-models --query 'modelSummaries[*].[modelId,providerName]' --output table || {
            echo "Bedrock access test failed"
            exit 1
          }
          echo "Bedrock access verified!"

      - name: Run Bedrock Credentials Smoke Test
        run: |
          echo "Running Bedrock credentials smoke test..."
          ./gradlew :integration-tests:cleanJvmTest :integration-tests:jvmTest --tests "ai.koog.integration.tests.BedrockCredentialsSmokeTest"
          echo "Bedrock credentials smoke test passed!"

      - name: JvmIntegrationTest with Gradle Wrapper
        env:
          ANTHROPIC_API_TEST_KEY: ${{ secrets.ANTHROPIC_API_TEST_KEY }}
          OPEN_AI_API_TEST_KEY: ${{ secrets.OPEN_AI_API_TEST_KEY }}
          GEMINI_API_TEST_KEY: ${{ secrets.GEMINI_API_TEST_KEY }}
          OPEN_ROUTER_API_TEST_KEY: ${{ vars.OPEN_ROUTER_API_TEST_KEY }}
          DEEPSEEK_API_TEST_KEY: ${{ vars.DEEPSEEK_API_TEST_KEY }}
        run: ./gradlew jvmIntegrationTest --continue

      - name: Collect reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.os }}
          path: |
            **/build/reports/
