[versions]
annotations = "26.0.1"
junit = "5.8.2"
kotlin = "2.1.21"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.6.2"
kotlinx-io = "0.7.0"
kotlinx-serialization = "1.8.1" # check with IJ
ktor3 = "3.2.2"
lettuce = "6.5.5.RELEASE"
logback = "1.5.13"
oshai-logging = "7.0.7"
mockk = "1.13.8"
shadow = "8.1.1"
slf4j = "2.0.17"
mcp = "0.6.0"
dokka = "2.0.0"
jetsign = "45.47"
testcontainers = "1.19.7"
kover = "0.9.1"
spring-boot = "3.5.4"
spring-management = "1.1.7"
opentelemetry = "1.51.0"
aws-sdk-kotlin = "1.4.119"
ktlint = "13.0.0"
knit = "0.5.0"

[libraries]
jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "annotations" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor3" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor3" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor3" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor3" }
ktor-client-sse = { module = "io.ktor:ktor-server-sse", version.ref = "ktor3" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor3" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor3" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor3" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor3" }
ktor-server-sse = { module = "io.ktor:ktor-server-sse", version.ref = "ktor3" }
lettuce-core = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
oshai-kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "oshai-logging" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
dokka-gradle-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
mcp = { module = "io.modelcontextprotocol:kotlin-sdk", version.ref = "mcp" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
jetsign-gradle-plugin = { module = "com.jetbrains:jet-sign", version.ref = "jetsign" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp" }
opentelemetry-exporter-logging = { module = "io.opentelemetry:opentelemetry-exporter-logging" }
aws-sdk-kotlin-bedrock = { module = "aws.sdk.kotlin:bedrock", version.ref = "aws-sdk-kotlin" }
aws-sdk-kotlin-bedrockruntime = { module = "aws.sdk.kotlin:bedrockruntime", version.ref = "aws-sdk-kotlin" }
aws-sdk-kotlin-sts = { module = "aws.sdk.kotlin:sts", version.ref = "aws-sdk-kotlin" }

# Spring
spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter"}
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator"}
spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security"}
spring-boot-validation = { module = "org.springframework.boot:spring-boot-starter-validation"}
spring-boot-web = { module = "org.springframework.boot:spring-boot-starter-web"}
spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux"}
spring-boot-processor = { module = "org.springframework.boot:spring-boot-configuration-processor"}
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin"}
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions" }

[bundles]
spring-boot-core = [
    "spring-boot-starter",
    "jackson-module-kotlin",
    "kotlinx-coroutines-reactor"
]

spring-boot-web = [
    "spring-boot-web",
    "spring-boot-webflux"
]

spring-boot-security = [
    "spring-boot-security",
    "spring-boot-validation"
]

[plugins]
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
spring-management = { id = "io.spring.dependency-management", version.ref = "spring-management" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
knit = { id = "org.jetbrains.kotlinx.knit", version.ref = "knit" }
